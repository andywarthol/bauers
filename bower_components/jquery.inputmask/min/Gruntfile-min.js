module.exports=function(e){function n(e){return"/*!\n* "+e+'\n* http://github.com/RobinHerbots/jquery.inputmask\n* Copyright (c) 2010 - <%= grunt.template.today("yyyy") %> <%= pkg.author.name %>\n* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\n* Version: <%= pkg.version %>\n*/\n'}function s(s){var i={},u=e.file.expand(s+"/*.js");for(var r in u){var a=u[r].replace("js/",""),o=a.replace(".js",".min.js");t(u[r],"build/"+a,-1==a.indexOf("extension")?["jquery"]:["jquery","./jquery.inputmask"]),i[a]={dest:"dist/inputmask/"+a,src:"build/"+a,options:{banner:n(a),beautify:!0,mangle:!1,preserveComments:"some",ASCIIOnly:!0}},i[o]={dest:"dist/inputmask/"+o,src:"build/"+a,options:{banner:n(o),preserveComments:"some",ASCIIOnly:!0}}}return u=e.file.expand(s+"/*.extensions.js"),u.splice(0,0,"js/jquery.inputmask.js"),i.inputmaskbundle={files:{"dist/<%= pkg.name %>.bundle.js":u},options:{banner:n("<%= pkg.name %>.bundle"),beautify:!0,mangle:!1,preserveComments:"some",ASCIIOnly:!0}},i.inputmaskbundlemin={files:{"dist/<%= pkg.name %>.bundle.min.js":u},options:{banner:n("<%= pkg.name %>.bundle"),preserveComments:"some",ASCIIOnly:!0}},i}function t(n,s,t){function i(){return u.replace(new RegExp("\\(jQuery\\).*$"),"")}var u=e.file.read(n),r="(function (factory) {if (typeof define === 'function' && define.amd) {define("+JSON.stringify(t)+", factory);} else {factory(jQuery);}}\n"+i()+");";e.file.write(s,r)}e.initConfig({pkg:e.file.readJSON("package.json"),uglify:s("js"),clean:["dist"],qunit:{files:["qunit/qunit.html"]},bump:{options:{files:["package.json","bower.json","composer.json"],updateConfigs:["pkg"],commit:!1,createTag:!1,push:!1}},release:{options:{bump:!1,commitMessage:"jquery.inputmask <%= version %>"}},nugetpack:{dist:{src:function(){return"linux"===process.platform?"nuget/jquery.inputmask.linux.nuspec":"nuget/jquery.inputmask.nuspec"}(),dest:"dist/",options:{version:"<%= pkg.version %>"}}},nugetpush:{dist:{src:"dist/jQuery.InputMask.<%= pkg.version %>.nupkg"}},shell:{options:{stderr:!1},gitcommitchanges:{command:["git add .","git reset -- package.json",'git commit -m "jquery.inputmask <%= pkg.version %>"'].join("&&")}}}),e.loadNpmTasks("grunt-contrib-uglify"),e.loadNpmTasks("grunt-contrib-clean"),e.loadNpmTasks("grunt-contrib-qunit"),e.loadNpmTasks("grunt-bump"),e.loadNpmTasks("grunt-release"),e.loadNpmTasks("grunt-nuget"),e.loadNpmTasks("grunt-shell"),e.registerTask("publish:patch",["clean","bump:patch","uglify","shell:gitcommitchanges","release","nugetpack","nugetpush"]),e.registerTask("publish:minor",["clean","bump:minor","uglify","shell:gitcommitchanges","release","nugetpack","nugetpush"]),e.registerTask("publish:major",["clean","bump:major","uglify","shell:gitcommitchanges","release","nugetpack","nugetpush"]),e.registerTask("default",["clean","uglify"])};